// тЬЕ RAJA Bot - Azan Video Broadcaster
const axios = require("axios");
const schedule = require("node-schedule");

// тЬЕ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ рж╕ржорзЯ ржЕржирзБржпрж╛рзЯрзА ржкрзНрж░рждрж┐ржжрж┐ржирзЗрж░ ржЖржЬрж╛ржирзЗрж░ рж╕ржорзЯ
const azanTimes = {
  "ржлржЬрж░": "04:15",
  "ржпрзЛрж╣рж░": "12:45",
  "ржЖрж╕рж░": "16:15",
  "ржорж╛ржЧрж░рж┐ржм": "18:45",
  "ржПрж╢рж╛": "20:00"
};

// тЬЕ ржЖржЬрж╛ржирзЗрж░ ржнрж┐ржбрж┐ржУ рж▓рж┐ржВржХ (Imgur CDN ржерзЗржХрзЗ ржирж┐рждрзЗ рж╣ржмрзЗ)
const azanVideoUrl = "https://i.imgur.com/rEIgnsP.mp4"; // ЁЯФБ ржПржЦрж╛ржирзЗ ржнрж┐ржбрж┐ржУ рж▓рж┐ржВржХ ржмрж╕рж╛ржУ

// тЬЕ ржпрзЗ ржЧрзНрж░рзБржкржЧрзБрж▓рзЛрждрзЗ ржорзЗрж╕рзЗржЬ ржпрж╛ржмрзЗ ржирж╛
const blacklistedGroupIds = [
  "1234567890", // ЁЯЫС Example Group UID
  "2345678901"
];

// тЬЕ ржпрзЗ ржЖржЗржбрж┐рждрзЗ рж░рж┐ржкрзЛрж░рзНржЯ ржпрж╛ржмрзЗ
const adminInboxUID = "100013678366954"; // ЁЯФФ ржПржЦрж╛ржирзЗ рждрзЛржорж╛рж░ ржЗржиржмржХрзНрж╕ UID ржмрж╕рж╛ржУ

module.exports.config = {
  name: "azanScheduler",
  version: "1.0.0",
  hasPermssion: 2,
  credits: "RAJA тЬи",
  description: "ржЖржЬрж╛ржирзЗрж░ рж╕ржорзЯ ржнрж┐ржбрж┐ржУ ржУ ржмрж╛рж░рзНрждрж╛ ржкрж╛ржарж╛ржмрзЗ рж╕рзНржмрзЯржВржХрзНрж░рж┐рзЯржнрж╛ржмрзЗ",
  commandCategory: "Automation",
  usages: "auto",
  cooldowns: 5
};

module.exports.run = async ({ api }) => {
  for (const [azanName, time] of Object.entries(azanTimes)) {
    const [hour, minute] = time.split(":").map(Number);

    schedule.scheduleJob({ hour, minute, tz: "Asia/Dhaka" }, async () => {
      const threads = await api.getThreadList(100, null, ["INBOX"]);
      const groupThreads = threads.filter(thread => thread.isGroup);

      let skippedGroups = [];

      for (const group of groupThreads) {
        if (blacklistedGroupIds.includes(group.threadID)) {
          skippedGroups.push({ id: group.threadID, name: group.name });
          continue;
        }

        try {
          await api.sendMessage({
            body: `ЁЯУв ржПржЦржи ${azanName} ржПрж░ ржЖржЬрж╛ржи рж╣ржпрж╝рзЗржЫрзЗред рж╕ржмрж╛ржЗ ржорж╕ржЬрж┐ржжрзЗ ржЧрж┐ржпрж╝рзЗ ржирж╛ржорж╛ржЬ ржкржбрж╝рзЛ ЁЯХМ`,
            attachment: await global.utils.getStreamFromURL(azanVideoUrl)
          }, group.threadID);
        } catch (err) {
          console.error(`тЭМ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛рждрзЗ ржмрзНржпрж░рзНрже: ${group.name} (${group.threadID})`);
        }
      }

      if (skippedGroups.length > 0) {
        const report = skippedGroups.map(g => `ЁЯФХ ${g.name} (${g.id})`).join("\n");
        await api.sendMessage(`тЪая╕П ржирж┐ржЪрзЗрж░ ржЧрзНрж░рзБржкрзЗ ржЖржЬрж╛ржирзЗрж░ ржнрж┐ржбрж┐ржУ ржпрж╛ржпрж╝ржирж┐:\n\n${report}`, adminInboxUID);
      }
    });
  }

  console.log("тЬЕ Azan Scheduler ржЪрж╛рж▓рзБ рж╣ржпрж╝рзЗржЫрзЗ тЬЕ");
};
